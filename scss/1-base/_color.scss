$ds-color-palette-data: (
  white: (
    000: #ffffff
  ),

  black: (
    1000: #000000
  ),

  neutral: (
    1000: #000000,
    900: #333333,
    800: #25292F,
    700: #353C46,
    600: #464F5C,
    500: #697489,
    400: #A9B1BE,
    300: #B0B9C8,
    200: #CBCFD7,
    100: #E0E3E8,
    080: #EBEDF0,
    050: #F6F7F9,
    000: #FFFFFF
  ),

  primary: (
    800: #005181,
    700: #006AA9,
    600: #2080CD,
    500: #1394E5,
    400: #52A6EC,
    300: #A3D6FF,
    200: #EBF6FF,
    100: #F6FBFF
  ),

  green: (
    900: #32B87C,
    300: #D4F0E5
  ),

  orange: (
    900: #FF9400,
    600: #FBB431
  ),

  red: (
    900: #E34256,
    200: #F7CDD2
  )
);

$app-background-color: ds-color(white, 000);

html {
  background: $app-background-color;
}

/// Returns the color value for a given color name and group.
///
/// @param {String} $hue - The color's hue.
/// @param {String} $value - The darkness/lightness of the color. Defaults to base.
/// @param {Color} $for-background - The background color on which this color will
/// appear. Applies a multiply filter to ensure appropriate contrast.
/// @return {Color} The color value.

@function ds-color($hue, $value: 900, $for-background: null) {
  $fetched-color: map-get(map-get($ds-color-palette-data, $hue), $value);

  @if map-has-key($ds-color-palette-data, $fetched-color) {
    $fetched-color: map-get(map-get($ds-color-palette-data, $fetched-color), $value);
  }

  @if $for-background != null {
    $fetched-color: color-multiply($fetched-color, $for-background);
  }

  @if type-of($fetched-color) == color {
    @return $fetched-color;
  } @else {
    @error 'Color `#{$hue} - #{$value}` not found. Available colors: #{available-names($ds-color-palette-data)}';
  }
}

// Darkens the foreground color by the background color. This is the same as the
/// “multiply” filter in graphics apps.
///
/// @param {Color} $foreground - The color to darken.
/// @param {Color} $background - The background to base darkening on.
/// @return {Color} The modified color.
@function ds-color-multiply($foreground, $background: null) {
  @if $background == null {
    $background: #ffffff;
  }
  @return $foreground * $background / 255;
}

